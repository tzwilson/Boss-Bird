package com.bossdevelopment.BossBird2;

import android.os.Bundle;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.RelativeLayout;
import android.app.Activity;
import android.content.Intent;

import com.badlogic.gdx.backends.android.AndroidApplication;
import com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;
import com.bossdevelopment.BossBird2.ZBGame;
import com.kilobolt.GameWorld.GameWorld;
import com.kilobolt.ui.GoogleInterface;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.games.Games;
import com.google.android.gms.plus.PlusClient.OnMomentsLoadedListener;
import com.google.example.games.basegameutils.GameHelper;
import com.google.example.games.basegameutils.GameHelper.GameHelperListener;
import com.google.example.games.basegameutils.BaseGameActivity;
import com.iERC.BossBird.Ads.AdRequestHandler;

public class MainActivity extends AndroidApplication implements GameHelperListener, GoogleInterface {
	AdRequestHandler		adHandler;
	GameHelper              gHelper;
	GameHelperListener      gListener;
	private OnMomentsLoadedListener leaderlisten;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        gHelper = new GameHelper(this, 0);
        gHelper.setup(this);
        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();
        cfg.useGL20 = false;
        
        RelativeLayout layout = new RelativeLayout(this);
		requestWindowFeature(Window.FEATURE_NO_TITLE); // no title is needed
		// Do the stuff that initialize() would do for you
		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
		getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);

		adHandler = new AdRequestHandler(this, layout);
		
		View gameView = initializeForView(new ZBGame(adHandler), cfg);
		layout.addView(gameView);
		//adHandler.bindAdMobAds();
		adHandler.bindRevMobAds ( );
		setContentView(layout);

    }
    @Override
    public void onStart() {
    	super.onStart();
    	gHelper.onStart(this);
    	gHelper.getApiClient().connect();
    	gClient.connect();
    	Games.Leaderboards.getAllLeaderboardsIntent(gClient);
    	//getScores();
    }
    @Override
    public void onResume(){
    	super.onResume();
    	if(GameWorld.Leaderboards == true){
    	}
    }
    @Override
    public void onStop() {
    	//getScores();
    	super.onStop();
    	gHelper.disconnect();
    }
    @Override
    public void onDestroy(){
    	super.onDestroy();
    }
	@Override
	public void onSignInFailed() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onSignInSucceeded() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onActivityResult(int request, int response, Intent data) {
	super.onActivityResult(request, response, data);
	gHelper.onActivityResult(request, response, data);
	}
	@Override
	public void Login() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void LogOut() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public boolean getSignedIn() {
		// TODO Auto-generated method stub
		return false;
	}
	@Override
	public void submitScore(int score) {
		Games.Leaderboards.submitScore(gHelper.getApiClient(),"CgkIo5GL2sYLEAIQBg", GameWorld.score2);
		
	}
	@Override
	public void getScores() {
		// TODO Auto-generated method stub
		String key = "CgkIo5GL2sYLEAIQBg";
		startActivityForResult(Games.Leaderboards.getLeaderboardIntent(gHelper.getApiClient(), key), 100);
	}
	@Override
	public void getScoresData() {
		// TODO Auto-generated method stub
		
	}
}