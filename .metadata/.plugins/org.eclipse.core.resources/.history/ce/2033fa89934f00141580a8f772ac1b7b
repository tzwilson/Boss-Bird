package com.bossdevelopment.BossBird2;

import android.R;
import android.annotation.TargetApi;
import android.content.Intent;
import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.backends.android.AndroidApplication;
import com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;
import com.bossdevelopment.BossBird2.ZBGame;
import com.bossdevelopment.BossBird2.R.id;
import com.bossdevelopment.BossBird2.R.string;
import com.google.example.games.basegameutils.GameHelper;
import com.google.example.games.basegameutils.GameHelper.GameHelperListener;
import com.iERC.BossBird.Ads.AdRequestHandler;
import com.kilobolt.GameWorld.*;
import com.kilobolt.Screens.GameScreen;
import com.kilobolt.Screens.SplashScreen;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.games.Games;

public class MainActivity extends AndroidApplication implements GameHelperListener, View.OnClickListener {
	AdRequestHandler		adHandler;
	GameHelper              gHelp;
	ImageButton             leaderboards;
	ImageButton             achievements;
	Button             signin;
	Button                  share;
	private final int       ldrBrd = 1;
	private String          ldrkey = "CgkIo5GL2sYLEAIQCQ";
	private boolean 		mSignInClicked;
	private ConnectionResult mConnectionResult;


	

@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        gHelp = new GameHelper(this, GameHelper.CLIENT_GAMES);
        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();
        cfg.useGL20 = false;
        RelativeLayout layout = new RelativeLayout(this);
        LinearLayout  buttons = new LinearLayout(this);
		requestWindowFeature(Window.FEATURE_NO_TITLE); // no title is needed
		// Do the stuff that initialize() would do for you
		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
		getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);

		adHandler = new AdRequestHandler(this, layout);
		View gameView = initializeForView(new ZBGame(adHandler), cfg);
		LayoutParams params = new LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.WRAP_CONTENT);
		
		// Buttons
		
		// google plus login
		signin = new Button(this);
		//signin.setImageResource(com.bossdevelopment.BossBird2.R.drawable.signin);
		signin.setText(+string.signin);
		signin.setId(id.sign_in_button);
		signin.setClickable(true);
		signin.setPadding(0, 0, 0, 0);
		signin.setBackgroundColor(Color.TRANSPARENT);
		signin.setLayoutParams(params);
		signin.setVisibility(View.INVISIBLE);
		
		
		leaderboards = new ImageButton(this);
		leaderboards.setImageResource(com.bossdevelopment.BossBird2.R.drawable.leaderimg);
		leaderboards.setId(id.ldrbrd_button);
		leaderboards.setClickable(true);
		leaderboards.setLayoutParams(params);
		leaderboards.setVisibility(View.INVISIBLE);
		
		achievements = new ImageButton(this);
		achievements.setImageResource(com.bossdevelopment.BossBird2.R.drawable.acheiveimg);
		achievements.setId(id.achievements_button);
		achievements.setClickable(true);
		achievements.setLayoutParams(params);
		achievements.setVisibility(View.INVISIBLE);
		
		// facebook share button
		share = new Button(this);
		share.setText(+string.share_btn);
		share.setId(id.share_button);
		share.setClickable(false);
		share.setPadding(1, 1, 1, 1);
		share.setLayoutParams(params);
		share.setVisibility(View.INVISIBLE);
		
		
		layout.addView(gameView);
		
		buttons.addView(signin);
		buttons.addView(leaderboards);
		buttons.addView(achievements);
		//buttons.addView(share); share button
		
		layout.addView(buttons);
		//adHandler.bindAdMobAds();
		adHandler.bindRevMobAds ( );
		
		
		setContentView(layout);
		
		findViewById(+id.achievements_button).setOnClickListener(this);
		findViewById(+id.ldrbrd_button).setOnClickListener(this);
		findViewById(+id.sign_in_button).setOnClickListener(this);
		//findViewById(+id.share_button).setOnClickListener(this);
        gHelp.setup(this);
        gHelp.setMaxAutoSignInAttempts(0);
    }
	@Override
	public void onSignInFailed() {
//	    // Sign in has failed. do something.
		signin.setVisibility(View.VISIBLE);
		leaderboards.setVisibility(View.INVISIBLE);
		achievements.setVisibility(View.INVISIBLE);
	}
	@Override
	public void onSignInSucceeded() {
		// when we sign in, sleep to let splash screen display
		try {
		    Thread.sleep(3000);
		} catch(InterruptedException ex) {
		    Thread.currentThread().interrupt();
		}
		// show buttons
		signin.setVisibility(View.INVISIBLE);
	    leaderboards.setVisibility(View.VISIBLE);
	    achievements.setVisibility(View.VISIBLE);
	}
	@Override
	public void onStart(){
		super.onStart();
		gHelp.onStart(this);
	}
	@Override
	public void onResume(){
		super.onResume();
	}
	@Override
	public void onStop(){
		super.onStop();
		gHelp.onStop();
	}
	@Override
	public void onActivityResult(int request, int response, Intent data) {
		super.onActivityResult(request, response, data);
		gHelp.onActivityResult(request, response, data);
}
	@Override
	public void onClick(View v) {
		if(v.getId() == signin.getId()){
			gHelp.beginUserInitiatedSignIn();
		}
	    if (v.getId() == leaderboards.getId()) {
	    	if(gHelp.isSignedIn() == true){
	    		if(GameWorld.score3 >= GameWorld.score2){
	    			Games.Leaderboards.submitScore(gHelp.getApiClient(), ldrkey, GameWorld.score3);
	    			}
	    	startActivityForResult(Games.Leaderboards.getAllLeaderboardsIntent(gHelp.getApiClient()), ldrBrd);
	    	}
	    	else{
	    		gHelp.beginUserInitiatedSignIn();
	    	}
	    }
	    if (v.getId() == achievements.getId()) {
	    	if(gHelp.isSignedIn() == true){
	    		if(GameWorld.score3 >= 5)
	    		{
	    			Games.Achievements.unlock(gHelp.getApiClient(),"CgkIo5GL2sYLEAIQAQ");
	    		}
	    		if(GameWorld.score3 >= 18)
	    		{
	    			Games.Achievements.unlock(gHelp.getApiClient(),"CgkIo5GL2sYLEAIQAg");
	    		}
	    		if(GameWorld.score3 >= 50)
	    		{
	    			Games.Achievements.unlock(gHelp.getApiClient(),"CgkIo5GL2sYLEAIQAw");
	    		}
	    		if(GameWorld.score3 >= 80)
	    		{
	    			Games.Achievements.unlock(gHelp.getApiClient(),"CgkIo5GL2sYLEAIQBA");
	    		}
	    		if(GameWorld.score3 >= 120)
	    		{
	    			Games.Achievements.unlock(gHelp.getApiClient(),"CgkIo5GL2sYLEAIQBQ");
	    		}
	    		startActivityForResult(Games.Achievements.getAchievementsIntent(gHelp.getApiClient()), 0);
	    		}
	    	    else{
	    		gHelp.beginUserInitiatedSignIn();
	    	}
	    }
	    if(v.getId() == share.getId()){
	    	
	    }
	}
}