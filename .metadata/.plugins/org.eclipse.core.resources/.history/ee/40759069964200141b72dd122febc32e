package com.bossdevelopment.BossBird3;

import android.R;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.RelativeLayout;

import com.badlogic.gdx.backends.android.AndroidApplication;
import com.badlogic.gdx.backends.android.AndroidApplicationConfiguration;
import com.bossdevelopment.BossBird2.ZBGame;
import com.bossdevelopment.BossBird3.R.id;
import com.bossdevelopment.BossBird3.R.string;
import com.google.example.games.basegameutils.GameHelper;
import com.google.example.games.basegameutils.GameHelper.GameHelperListener;
import com.iERC.BossBird.Ads.AdRequestHandler;
import com.kilobolt.ZBHelpers.AssetLoader;
import com.kilobolt.ZBHelpers.InputHandler;
import com.kilobolt.Screens.GameScreen;
import com.kilobolt.GameWorld.*;
import com.google.android.gms.games.Games;
import com.google.android.gms.plus.Plus;

public class MainActivity extends AndroidApplication implements GameHelperListener, View.OnClickListener {
	AdRequestHandler		adHandler;
	GameHelper               gHelp;
	Button                  leaderboards;
	Button                  achievements;
	private final int       ldrBrd = 1;
	private String          ldrkey = "CgkIo5GL2sYLEAIQCQ";
	private int             score = 0;
	private boolean         submitscore = false;
	private boolean         signedin    = false;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        gHelp = new GameHelper(this, GameHelper.CLIENT_GAMES);
        AndroidApplicationConfiguration cfg = new AndroidApplicationConfiguration();
        cfg.useGL20 = false;
        RelativeLayout layout = new RelativeLayout(this);
		requestWindowFeature(Window.FEATURE_NO_TITLE); // no title is needed
		// Do the stuff that initialize() would do for you
		getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
		getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);

		adHandler = new AdRequestHandler(this, layout);
		
		View gameView = initializeForView(new ZBGame(adHandler), cfg);
		
		// Leaderboard and Achievement Buttons
		leaderboards = new Button(this);
		leaderboards.setText(+string.ldrbrd_btn);
		leaderboards.setId(+id.ldrbrd_button);
		leaderboards.setClickable(true);
		
		achievements = new Button(this);
		achievements.setText(+string.achieve_btn);
		achievements.setId(+id.achievements_button);
		achievements.setClickable(true);
		
		layout.addView(gameView);
		//layout.addView(leaderboards);
		layout.addView(achievements);
		
		
		//adHandler.bindAdMobAds();
		adHandler.bindRevMobAds ( );
		setContentView(com.bossdevelopment.BossBird3.R.layout.main);
		setContentView(layout);
		//findViewById(+id.ldrbrd_button).setOnClickListener(this);
		findViewById(+id.achievements_button).setOnClickListener(this);
        gHelp.setup(this);
        gHelp.setMaxAutoSignInAttempts(0);
    }
	@Override
	public void onSignInFailed() {
//	    // Sign in has failed. So show the user the sign-in button.
//	    findViewById(R.id.sign_in_button).setVisibility(View.VISIBLE);
//	    findViewById(R.id.sign_out_button).setVisibility(View.GONE);
	}
	@Override
	public void onSignInSucceeded() {
	}
	@Override
	public void onStart(){
		super.onStart();
		gHelp.onStart(this);
		//leaderboards.setVisibility(View.VISIBLE);
	}
	@Override
	public void onResume(){
		super.onResume();
	}
	@Override
	public void onStop(){
		super.onStop();
		gHelp.onStop();
	}
	@Override
	public void onActivityResult(int request, int response, Intent data) {
		super.onActivityResult(request, response, data);
		gHelp.onActivityResult(request, response, data);
}
	@Override
	public void onClick(View v) {
	    if (v.getId() == leaderboards.getId()) {
	    	if(gHelp.isSignedIn() == true){
	    		if(GameWorld.score3 >= GameWorld.score2){
	    			Games.Leaderboards.submitScore(gHelp.getApiClient(), ldrkey, GameWorld.score3);
	    			}
	    	startActivityForResult(Games.Leaderboards.getAllLeaderboardsIntent(gHelp.getApiClient()), ldrBrd);
	    	}
	    	else{
	    		gHelp.beginUserInitiatedSignIn();
	    	}
	    }
	    if (v.getId() == achievements.getId()) {
	    	if(gHelp.isSignedIn() == true){
	    		if(GameWorld.score3 >= 5)
	    		{
	    			Games.Achievements.unlock(gHelp.getApiClient(),"CgkIo5GL2sYLEAIQAQ");
	    		}
	    		if(GameWorld.score3 >= 15)
	    		{
	    			Games.Achievements.unlock(gHelp.getApiClient(),"CgkIo5GL2sYLEAIQAg");
	    		}
	    		
	    		startActivityForResult(Games.Achievements.getAchievementsIntent(gHelp.getApiClient()), 0);
	    		}	    	
	    	    else{
	    		gHelp.beginUserInitiatedSignIn();
	    	}
	    }
//	    else if (v.getId() == R.id.sign_out_button) {
//	        signOut();
//	        findViewById(R.id.sign_in_button).setVisibility(View.VISIBLE);
//	        findViewById(R.id.sign_out_button).setVisibility(View.GONE);
//	    }
//	}
//	private void signOut() {
//		gHelp.signOut();
	}
}